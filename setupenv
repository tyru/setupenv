#!/bin/sh

# XXX:
# - lib/ and lib/pkgconfig/ directories are fixed path?
# - ldconfig influences original environment?
# TODO:
# - zsh/bash completion file
# - "bundle" command
# - "create-bundle" command

true=:
false=/bin/false


cmd_help() {
    progname="$(basename "$0")"
    cat <<EOM
    Usage

        $progname {command} [args ...]

    Commands

        help
            Show help.

        shell proj_dir [proj_dir2 ...]
            Add and set up new shell.

        list
            List all env(s).

        bundle bundle_name [bundle_name2 ...]
            Expand bundle names and exec "shell" command.

        create-bundle [bundle_name [proj_dir proj_dir2 ...]]
            Create a bundle.

        in
            Show the status whether I'm in env.
EOM
    exit 1
}

create_lock_dir() {
    local dir="/tmp/setupenv"
    mkdir -p $dir
    if [ ! -d $dir ]; then
        echo "Can't create lock dir: $dir" >&2
        exit 1
    fi
}

get_lock_file() {
    echo "/tmp/setupenv/$1"
}

get_lock_id() {
    local id file
    while $true; do
        # Trim whitespaces which od outputs.
        id="$(echo $(od -vAn -N4 -tu4 < /dev/urandom))"
        file=`get_lock_file "$id"`
        [ ! -e "$file" ] && break
    done
    echo "$id"
}

get_all_lock_ids() {
    local dir="/tmp/setupenv"
    if [ ! -d $dir ]; then
        echo "get_all_lock_ids: No lock dir exists: $dir"
        exit 1
    fi

    [ -z "$(ls /tmp/setupenv)" ] && return

    local file
    for file in /tmp/setupenv/*; do
        echo "$(basename "$file")"
    done
}

cmd_shell() {
    local changed=$false

    if [ ! -z "$SETUPENV_ID" ]; then
        # In env
        local file="$(get_lock_file "$SETUPENV_ID")"
        echo "Already in env: $(cat "$file")" >&2
        exit 1
    fi

    for dir in "$@"; do
        [ -d "$dir" ] || continue

        if [ -d "$dir/bin"  ]; then
            if [ -z "$PATH" ]; then
                export PATH="$dir/bin"
            else
                export PATH="$dir/bin:$PATH"
            fi
            changed=$true
        fi

        if [ -d "$dir/lib" ]; then
            if [ -z "$LD_LIBRARY_PATH" ]; then
                export LD_LIBRARY_PATH="$dir/lib"
            else
                export LD_LIBRARY_PATH="$dir/lib:$LD_LIBRARY_PATH"
            fi
            sudo ldconfig
            changed=$true
        fi

        if [ -d "$dir/lib/pkgconfig" ]; then
            if [ -z "$PKG_CONFIG_PATH" ]; then
                export PKG_CONFIG_PATH="$dir/lib/pkgconfig"
            else
                export PKG_CONFIG_PATH="$dir/lib/pkgconfig:$PKG_CONFIG_PATH"
            fi
            changed=$true
        fi
    done

    if $changed; then
        echo "spawning new shell($SHELL)..."

        export SETUPENV_ID=`get_lock_id`

        create_lock_dir
        local file="`get_lock_file "$SETUPENV_ID"`"
        echo "$*" >"$file" || {
            echo "Could not write to '$file'." >&2
            exit 1
        }

        $SHELL    # XXX: Trap error

        rm "$file"
    else
        echo "No lib/ dir(s) found. exit." >&2
        exit 1
    fi
}

cmd_list() {
    local ids="$(get_all_lock_ids)"
    [ -z "$ids" ] && return

    local id file
    for id in "$ids"; do
        local file="$(get_lock_file "$id")"
        echo "$id: $(cat "$file")"
    done
}

cmd_in() {
    if [ -z "$SETUPENV_ID" ]; then
        # In env
        echo "Not in env." >&2
        return 1
    else
        local file=`get_lock_file "$SETUPENV_ID"`
        echo "$SETUPENV_ID: $(cat "$file")"
        return 0
    fi
}

create_config_dir() {
    local dir
    for dir in "$HOME/.setupenv" "$HOME/.setupenv/bundle"; do
        mkdir -p "$dir"
        if [ ! -d "$dir" ]; then
            echo "Can't create config dir: $dir" >&2
            exit 1
        fi
    done
}

cmd_create_bundle() {
    create_config_dir

    # TODO: -f option which always overwrites $dest.

    case $# in
        0|1)
            if [ -z "$SETUPENV_ID" ]; then
                # Not in env
                echo "create-bundle: bundle name was omitted but not in env." >&2
                exit 1
            fi

            local src="$(get_lock_file "$SETUPENV_ID")"
            local dest_dir="$HOME/.setupenv/bundle"
            if [ $# = 0 ]; then
                local dest="$dest_dir/$(basename "$src")"
            else
                local dest="$dest_dir/$1"
            fi
            if [ -e "$dest" ]; then
                echo "error: path '$dest' already exists." >&2
                exit 1
            fi

            cp "$src" "$dest"
            echo "Created bundle: $dest"    # TODO: More better filename (prompt to user?)
            ;;
    esac
}

escape_subcmd() {
    local i
    local old_ifs="$IFS"
    local firsttime=$true
    IFS=-
    for i in $1; do
        $firsttime || echo -n _
        firsttime=$false
        echo -n "$i"
    done
    IFS="$old_ifs"
}



[ $# = 0 ] && cmd_help

subcmd="$1"
escaped=`escape_subcmd "$1"`
shift
if type "cmd_$escaped" >/dev/null 2>&1; then
    "cmd_$escaped" "$@"
elif which "setupenv-$subcmd"; then
    "setupenv-$subcmd" "$@"
else
    echo "error: Unknown command: $subcmd" >&2
    echo
    cmd_help
fi
