#!/bin/sh

# XXX:
# - lib/ and lib/pkgconfig/ directories are fixed path?
# - ldconfig influences original environment?

true=:
false=/bin/false


cmd_help() {
    progname="$(dirname "$0")"
    cat <<EOM
    Usage

        $progname command [args ...]

    Commands

        help
            Show help.

        shell proj_dir [proj_dir2 ...]
            Add and set up new shell.
EOM
    exit 1
}

create_lock_dir() {
    local dir="/tmp/setupenv"
    mkdir $dir >/dev/null 2>&1
    if [ ! -d $dir ]; then
        echo "Can't create lock dir: $dir" >&2
        exit 1
    fi
}

get_lock_file() {
    echo "/tmp/setupenv/$1"
}

get_lock_id() {
    local id file
    while $true; do
        # Trim whitespaces which od outputs.
        id="$(echo $(od -vAn -N4 -tu4 < /dev/urandom))"
        file=`get_lock_file "$id"`
        [ ! -e "$file" ] && break
    done
    echo "$id"
}

get_all_lock_files() {
    echo /tmp/setupenv/*
}

cmd_shell() {
    local changed=$false

    for dir in "$@"; do
        [ -d "$dir" ] || continue

        if [ -d "$dir/bin"  ]; then
            if [ -z "$PATH" ]; then
                export PATH="$dir/bin"
            else
                export PATH="$dir/bin:$PATH"
            fi
            changed=$true
        fi

        if [ -d "$dir/lib" ]; then
            if [ -z "$LD_LIBRARY_PATH" ]; then
                export LD_LIBRARY_PATH="$dir/lib"
            else
                export LD_LIBRARY_PATH="$dir/lib:$LD_LIBRARY_PATH"
            fi
            sudo ldconfig
            changed=$true
        fi

        if [ -d "$dir/lib/pkgconfig" ]; then
            if [ -z "$PKG_CONFIG_PATH" ]; then
                export PKG_CONFIG_PATH="$dir/lib/pkgconfig"
            else
                export PKG_CONFIG_PATH="$dir/lib/pkgconfig:$PKG_CONFIG_PATH"
            fi
            changed=$true
        fi
    done

    if $changed; then
        echo "spawning new shell($SHELL)..."

        export SETUPENV_ID=`get_lock_id`

        create_lock_dir
        local file=`get_lock_file "$SETUPENV_ID"`
        echo "$*" >"$file"

        $SHELL    # XXX: Trap error

        rm "$file"
    else
        echo "No lib/ dir(s) found. exit." >&2
        exit 1
    fi
}

cmd_list() {
    local file
    # TODO: get_all_lock_ids
    for file in `get_all_lock_files`; do
        echo "$file: $(cat "$file")"
    done
}

cmd_in() {
    if [ -z "$SETUPENV_ID" ]; then
        echo "Not in env." >&2
    else
        local file=`get_lock_file "$SETUPENV_ID"`
        echo "$SETUPENV_ID: $(cat "$file")"
    fi
}



[ $# = 0 ] && cmd_help

subcmd="$1"
shift
if type "cmd_$subcmd" >/dev/null 2>&1; then
    "cmd_$subcmd" "$@"
elif which "setupenv-$subcmd"; then
    "setupenv-$subcmd" "$@"
else
    echo "error: Unknown command: $subcmd" >&2
    echo
    cmd_help
fi
